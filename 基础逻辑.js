function 对局初始化(){jzjm();let r=[],e=[];for(;r.length<30;){var t=at(卡牌数据库,!0);t.衍生卡||(r.push(卡牌实例化(t)),e.push(卡牌实例化(t)))}r=数组乱序(r),e=数组乱序(e),对战信息={"敌方":{id:2,"类型":"英雄","名称":"敌方","效果":[],"牌组":r,"护甲":0,"当前攻击":0,"当前血量":30,"血量上限":30,"手牌":[],"场面":[],"水晶":0,"水晶上限":0,"手牌上限":10,"操作卡牌":!1,"操作随从":!1},"我方":{id:1,"类型":"英雄","名称":"我方","效果":[],"牌组":e,"护甲":0,"当前攻击":0,"当前血量":30,"血量上限":30,"手牌":[],"场面":[],"水晶":0,"水晶上限":0,"手牌上限":10,"操作卡牌":!1,"操作随从":!1},"我方回合":gl(50),"游戏胜负":!1},tjdh("游戏开始",2,!1,5),游戏状态="游戏中"}function 卡牌实例化(r){var n=skb(r);n.当前费用=n.费用,n.当前攻击=n.攻击,n.当前血量=n.血量,n.血量上限=n.血量,n.种类="卡牌",n.描述="",n.id=md5(sjhz(100));for(let t=0;t<n.效果.length;t++)for(let e=0;e<卡牌效果.length;e++)if(n.效果[t].名称==卡牌效果[e].名称){let r=卡牌效果[e].描述;n.效果[t].数值&&0<n.效果[t].数值.length&&(r=function(r,e){let t="",n=0;for(var i of r)"#"===i?n<e.length?(t+=e[n],n++):t+="1":t+=i;return t}(卡牌效果[e].描述,n.效果[t].数值)),n.描述+=(0<t?"。":"")+r;break}return n}function 初始发牌(){摸牌(!0,3),摸牌(!1,3),对战信息.我方回合?(摸牌(!0,1),获得指定牌()):(摸牌(!1,1),获得指定牌(!1)),回合交替()}function 数组乱序(r){var e=r.slice();for(let r=e.length-1;0<=r;r--){var t=Math.floor(Math.random()*(r+1)),n=e[t];e[t]=e[r],e[r]=n}return e}function 摸牌(e=!0,t=1,n=!0){for(let r=0;r<t;r++)tjdh("摸牌",.5,!1,1,{"我方":e,"顺序摸":n})}function 实际摸牌(r=!0,e=!0){function t(r,e,t=1,n=!0){if(!Array.isArray(r)||!Array.isArray(e))throw new Error("Invalid array");if(!Number.isInteger(t))throw new Error("Invalid x");if("boolean"!=typeof n)throw new Error("Invalid s");t>e.length&&(t=e.length);let i=[];return i=(e=n?e:数组乱序(e)).splice(0,t),{a:r=r.concat(i),b:e}}r?(r=t(对战信息.我方.手牌,对战信息.我方.牌组,1,e),对战信息.我方.手牌=r.a,对战信息.我方.牌组=r.b):(r=t(对战信息.敌方.手牌,对战信息.敌方.牌组,1,e),对战信息.敌方.手牌=r.a,对战信息.敌方.牌组=r.b)}function 获得指定牌(t=!0,n=1,r,i="幸运币"){for(let e=0;e<卡牌数据库.length;e++)if(卡牌数据库[e].名称==i){for(let r=0;r<n;r++)tjdh("获得指定牌",t?1.5:.5,!1,5,{"我方":t,p:卡牌实例化(卡牌数据库[e])});break}}function 回合交替(){if(对战信息.我方.操作随从=!1,对战信息.我方.操作卡牌=!1,对战信息.我方回合){对战信息.敌方.水晶上限<10&&对战信息.敌方.水晶上限++,对战信息.敌方.水晶=对战信息.敌方.水晶上限,对战信息.敌方.攻击次数=检测卡牌效果(对战信息.敌方,"风怒")?2:1;for(let r=0;r<对战信息.我方.场面.length;r++){var e=对战信息.我方.场面[r];0<e.当前血量&&触发被动效果(e.id,"回合结束")}}else{对战信息.我方.水晶上限<10&&对战信息.我方.水晶上限++,对战信息.我方.水晶=对战信息.我方.水晶上限,对战信息.我方.攻击次数=检测卡牌效果(对战信息.我方,"风怒")?2:1;for(let r=0;r<对战信息.敌方.场面.length;r++){var t=对战信息.敌方.场面[r];0<t.当前血量&&触发被动效果(t.id,"回合结束")}}var n=(对战信息.我方回合?对战信息.敌方:对战信息.我方).场面;for(let r=0;r<n.length;r++)n[r].攻击次数=检测卡牌效果(n[r],"风怒")?2:1,检测卡牌效果(n[r],"无法攻击")&&(n[r].攻击次数=0);tjdh("战斗开始",1.5,!1,5)}function 检测卡牌效果(t,n){for(let e=0;e<t.效果.length;e++){if(-1!=t.效果[e].名称.indexOf(n))return t.效果[e];for(let r=0;r<卡牌效果.length;r++){if("亡语"==n&&t.效果[e].名称==卡牌效果[r].名称&&"被动"==卡牌效果[r].类型&&"死亡"==卡牌效果[r].被动触发时机)return t.效果[e];if("被动"==n&&t.效果[e].名称==卡牌效果[r].名称&&"被动"==卡牌效果[r].类型&&0==卡牌效果[r].描述.indexOf("被动"))return t.效果[e]}}return!1}function 返回卡牌效果(t){if(!t||1==t.id||2==t.id)return{"效果":[],"指向":!1};var n=[];let i=!1;for(let e=0;e<t.效果.length;e++)for(let r=0;r<卡牌效果.length;r++)if(t.效果[e].名称==卡牌效果[r].名称){-1!=卡牌效果[r].类型.indexOf("指向")?i||(n.push({"名称":t.效果[e].名称,"数值":t.效果[e].数值||[],"类型":卡牌效果[r].类型,"时机":卡牌效果[r].被动触发时机,"时间":卡牌效果[r].不要动画?.01:卡牌效果[r].动画时间||1,"不要动画":!!卡牌效果[r].不要动画,"缩放":卡牌效果[r].动画缩放||1,"弹道":!!卡牌效果[r].弹道}),i=卡牌效果[r].类型):n.push({"名称":t.效果[e].名称,"数值":t.效果[e].数值||[],"类型":卡牌效果[r].类型,"时机":卡牌效果[r].被动触发时机,"时间":卡牌效果[r].不要动画?.01:卡牌效果[r].动画时间||1,"不要动画":!!卡牌效果[r].不要动画,"缩放":卡牌效果[r].动画缩放||1,"弹道":!!卡牌效果[r].弹道});break}return{"效果":n,"指向":i}}function 使用卡牌(r,e,t,n,i){"随从"==r.类型?(t||0==t||(t=e.场面.length),e.水晶-=r.当前费用,r.种类="具象化",r.攻击次数=检测卡牌效果(r,"冲锋")?检测卡牌效果(r,"风怒")?2:1:0,检测卡牌效果(r,"无法攻击")&&(r.攻击次数=0),e.操作卡牌=!1,e.手牌.splice(n,1),tjdh("使用随从",1,!1,3,{p:r,"使用者":e,"对象":t,"手牌序号":n})):"法术"==r.类型&&(e.水晶-=r.当前费用,e.手牌.splice(n,1),e.操作卡牌=!1,释放卡牌效果(r,e,t,i))}function 获取随从位置(e){var r,t;if(1==e)return r=对战信息.我方,t=我方头像区域.x+(我方头像区域.w-我方头像区域.h)/2,{"存活":0<r.当前血量,p:r,xh:0,"左上坐标":{x:t,y:我方头像区域.y,w:我方头像区域.h,h:我方头像区域.h},"中心坐标":{x:t+我方头像区域.h/2,y:我方头像区域.y+我方头像区域.h/2},"友方随从":!0,"英雄":!0};if(2==e)return r=对战信息.敌方,t=敌方头像区域.x+(敌方头像区域.w-敌方头像区域.h)/2,{"存活":0<r.当前血量,p:r,xh:0,"左上坐标":{x:t,y:敌方头像区域.y,w:敌方头像区域.h,h:敌方头像区域.h},"中心坐标":{x:t+敌方头像区域.h/2,y:敌方头像区域.y+敌方头像区域.h/2},"友方随从":!1,"英雄":!0};var n=对战信息.敌方.场面.length,i=Math.min(.618*敌方随从区域.h,敌方随从区域.w/7);for(let r=0;r<n;r++){var h=敌方随从区域.x+(敌方随从区域.w-n*i-30*(n-1))/2+r*(i+30),a=对战信息.敌方.场面[r];if(a.id==e)return{"存活":0<a.当前血量,p:a,xh:r,"左上坐标":{x:h,y:敌方随从区域.y+.1*敌方随从区域.h,w:i,h:.8*敌方随从区域.h},"中心坐标":{x:h+i/2,y:敌方随从区域.y+.5*敌方随从区域.h},"友方随从":!1,"英雄":!1}}var f=对战信息.我方.场面.length;for(let r=0;r<f;r++){var l=我方随从区域.x+(我方随从区域.w-f*i-30*(f-1))/2+r*(i+30),o=对战信息.我方.场面[r];if(o.id==e)return{"存活":0<o.当前血量,p:o,xh:r,"左上坐标":{x:l,y:我方随从区域.y+.1*我方随从区域.h,w:i,h:.8*我方随从区域.h},"中心坐标":{x:l+i/2,y:我方随从区域.y+.5*我方随从区域.h},"友方随从":!0,"英雄":!1}}return!1}function 随从攻击(r,e){0<r.攻击次数&&0<r.当前攻击&&0<r.当前血量&&0<e.当前血量&&(e=e,(r=r).攻击次数--,对战信息.我方.操作随从=!1,tjdh("随从攻击移动",.8,!1,5,{p:r,p2:e}))}function 造成伤害(r,e,t){0==e||r.当前血量<=0||(e<r.当前血量-r.血量上限&&(e=r.当前血量-r.血量上限),r.当前血量-=e,tjdh("伤害治疗动画",1.5,!0,2,{"数值":e,id:r.id,id2:t.id}),0<e&&(检测卡牌效果(t,"剧毒")&&0<r.当前血量&&1!=r.id&&2!=r.id&&(r.当前血量=0),触发被动效果(t.id,"造成伤害"),触发被动效果(r.id,"受到伤害")))}function 可以操作(){if(对战信息.我方.当前血量<=0||对战信息.敌方.当前血量<=0)return 对战信息.我方.操作随从=!1,对战信息.我方.操作卡牌=!1;var e=dhxl.length;if(!(e<=0))for(let r=0;r<e;r++)if(!dhxl[r].yb)return 对战信息.我方.操作随从=!1,对战信息.我方.操作卡牌=!1;return!0}function 胜负判定(){(对战信息.我方.当前血量<=0||对战信息.敌方.当前血量<=0)&&(对战信息.我方.操作随从=!1,对战信息.我方.操作卡牌=!1,0<对战信息.我方.当前血量&&对战信息.敌方.当前血量<=0?对战信息.游戏胜负="赢":对战信息.游戏胜负="输")}function 释放卡牌效果(e,t,n=-1,i){var h=返回卡牌效果(e).效果;if(0<h.length)for(let r=0;r<h.length;r++){var a=h[r];if("无目标"==a.类型){tjdh("无目标技能动画",a.时间,!1,5,{p:e,"使用者":t,xg:a});break}if(("指向敌方"==a.类型||"指向友方"==a.类型)&&-1!=n){var f=获取随从位置(n.id);tjdh("指向技能动画",a.时间,!1,5,{p:e,"使用者":t,"目标":f,xg:a,"指向法术手牌坐标":i});break}}}function 触发被动效果(r,e){var t=获取随从位置(r),n=返回卡牌效果(t.p)?.效果||[];for(let r=0;r<n.length;r++){var i=n[r];"被动"==i.类型&&i.时机==e&&(0<t.p.当前血量||"死亡"==e||"造成伤害"==e||"受到伤害"==e)&&tjdh("被动技能动画",i.时间,!1,5,{p:t.p,"使用者":t.友方随从?对战信息.我方:对战信息.敌方,xg:i,zb:t.左上坐标})}}function 随机目标选择器(r,e=1,t=1,n=1,i=[]){let h=对战信息.敌方.场面,a=对战信息.我方.场面,f=对战信息.我方,l=对战信息.敌方,o=("敌方"==r.名称&&(h=对战信息.我方.场面,a=对战信息.敌方.场面,f=对战信息.敌方,l=对战信息.我方),[]);switch(e){case 1:switch(t){case 1:o=h;break;case 2:o=[l];break;case 3:o=[...h,l];break;default:return[]}break;case 2:switch(t){case 1:o=a;break;case 2:o=[f];break;case 3:o=[...a,f];break;default:return[]}break;case 3:switch(t){case 1:o=[...h,...a];break;case 2:o=[l,f];break;case 3:o=[...h,...a,l,f];break;default:return[]}break;default:return[]}if(n>=(o=(o=o.filter(r=>!i.includes(r.id))).filter(r=>0<r.当前血量)).length)return o;var u=[];for(let r=0;r<n;r++){var c=Math.floor(Math.random()*o.length);u.push(o[c]),o.splice(c,1)}return u}